{"version":3,"sources":["@core/components/sidebar/index.js","@core/components/widgets/stats/StatsHorizontal.js","views/user/employee/Sidebar.js","views/user/employee/columns.js","views/user/employee/Table.js","views/user/employee/index.js"],"names":["Sidebar","props","_classnames3","open","size","title","width","children","closeBtn","className","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","_objectWithoutProperties","_excluded","renderCloseBtn","_jsx","X","onClick","_jsxs","Modal","_objectSpread","isOpen","toggle","classnames","_defineProperty","modalClassName","undefined","style","String","ModalHeader","close","tag","PerfectScrollbar","options","wheelPropagation","ModalBody","StatsHorizontal","_ref","icon","color","stats","renderStats","statTitle","statsMargin","Card","CardBody","concat","defaultValues","email","contact","company","fullName","username","country","countryOptions","label","value","SidebarNewUsers","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","plan","setPlan","_useState5","_useState6","role","setRole","_useForm","useForm","control","setValue","setError","handleSubmit","errors","formState","onClosed","key","Form","onSubmit","Object","values","every","field","length","checkIsValid","type","Label","for","Controller","name","render","_ref2","Input","id","placeholder","invalid","_ref3","_ref4","FormText","_ref5","_ref6","_ref7","Select","isClearable","classNamePrefix","theme","selectThemeColors","onChange","e","target","Button","outline","renderClient","row","Math","floor","random","avatar","Avatar","img","height","content","initials","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","cell","Link","to","store","dispatch","getUser","roleObj","subscriber","class","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","renderRole","currentPlan","billing","status","Badge","pill","UncontrolledDropdown","DropdownToggle","MoreVertical","DropdownMenu","DropdownItem","FileText","href","preventDefault","Archive","Trash2","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","result","keys","join","forEach","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Row","Col","xl","htmlFor","caret","Share","Printer","Grid","File","Copy","UsersList","useDispatch","useSelector","state","users","sort","setSort","setSearchTerm","currentPage","setCurrentPage","_useState7","_useState8","sortColumn","setSortColumn","_useState9","_useState10","setRowsPerPage","_useState11","_useState12","sidebarOpen","setSidebarOpen","_useState13","_useState14","currentRole","setCurrentRole","_useState15","_useState16","setCurrentPlan","_useState17","number","_useState18","currentStatus","setCurrentStatus","Fragment","CardHeader","CardTitle","md","getData","q","page","perPage","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","ChevronDown","paginationComponent","count","Number","ceil","total","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","allData","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","lg","sm","UserCheck","UserPlus","Table"],"mappings":"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","file":"static/js/13.8483265c.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** React Import\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\n// import { addUser } from '../store'\r\n// import { useDispatch } from 'react-redux'\r\n\r\nconst defaultValues = {\r\n  email: '',\r\n  contact: '',\r\n  company: '',\r\n  fullName: '',\r\n  username: '',\r\n  country: null\r\n}\r\n\r\nconst countryOptions = [\r\n  { label: 'Australia', value: 'Australia' },\r\n  { label: 'Bangladesh', value: 'Bangladesh' },\r\n  { label: 'Belarus', value: 'Belarus' },\r\n  { label: 'Brazil', value: 'Brazil' },\r\n  { label: 'Canada', value: 'Canada' },\r\n  { label: 'China', value: 'China' },\r\n  { label: 'France', value: 'France' },\r\n  { label: 'Germany', value: 'Germany' },\r\n  { label: 'India', value: 'India' },\r\n  { label: 'Indonesia', value: 'Indonesia' },\r\n  { label: 'Israel', value: 'Israel' },\r\n  { label: 'Italy', value: 'Italy' },\r\n  { label: 'Japan', value: 'Japan' },\r\n  { label: 'Korea', value: 'Korea' },\r\n  { label: 'Mexico', value: 'Mexico' },\r\n  { label: 'Philippines', value: 'Philippines' },\r\n  { label: 'Russia', value: 'Russia' },\r\n  { label: 'South', value: 'South' },\r\n  { label: 'Thailand', value: 'Thailand' },\r\n  { label: 'Turkey', value: 'Turkey' },\r\n  { label: 'Ukraine', value: 'Ukraine' },\r\n  { label: 'United Arab Emirates', value: 'United Arab Emirates' },\r\n  { label: 'United Kingdom', value: 'United Kingdom' },\r\n  { label: 'United States', value: 'United States' }\r\n]\r\n\r\nconst checkIsValid = data => {\r\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\r\n}\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\r\n  // ** States\r\n  const [data, setData] = useState(null)\r\n  const [plan, setPlan] = useState('basic')\r\n  const [role, setRole] = useState('subscriber')\r\n\r\n  // ** Store Vars\r\n  // const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const {\r\n    control,\r\n    setValue,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  // ** Function to handle form submit\r\n  const onSubmit = data => {\r\n    setData(data)\r\n    if (checkIsValid(data)) {\r\n      toggleSidebar()\r\n      // dispatch(\r\n      //   addUser({\r\n      //     role,\r\n      //     avatar: '',\r\n      //     status: 'active',\r\n      //     email: data.email,\r\n      //     currentPlan: plan,\r\n      //     billing: 'auto debit',\r\n      //     company: data.company,\r\n      //     contact: data.contact,\r\n      //     fullName: data.fullName,\r\n      //     username: data.username,\r\n      //     country: data.country.value\r\n      //   })\r\n      // )\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] === null) {\r\n          setError('country', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n        if (data[key] !== null && data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSidebarClosed = () => {\r\n    for (const key in defaultValues) {\r\n      setValue(key, '')\r\n    }\r\n    setRole('subscriber')\r\n    setPlan('basic')\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      size='lg'\r\n      open={open}\r\n      title='New User'\r\n      headerClassName='mb-1'\r\n      contentClassName='pt-0'\r\n      toggleSidebar={toggleSidebar}\r\n      onClosed={handleSidebarClosed}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='fullName'>\r\n            Full Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='fullName'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='username'>\r\n            Username <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='username'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='username' placeholder='johnDoe99' invalid={errors.username && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='userEmail'>\r\n            Email <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='email'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input\r\n                type='email'\r\n                id='userEmail'\r\n                placeholder='john.doe@example.com'\r\n                invalid={errors.email && true}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        </div>\r\n\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='contact'>\r\n            Contact <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='contact'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='contact' placeholder='(397) 294-5153' invalid={errors.contact && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='company'>\r\n            Company <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='company'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='country'>\r\n            Country <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='country'\r\n            control={control}\r\n            render={({ field }) => (\r\n              // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\r\n              <Select\r\n                isClearable={false}\r\n                classNamePrefix='select'\r\n                options={countryOptions}\r\n                theme={selectThemeColors}\r\n                className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='user-role'>\r\n            User Role\r\n          </Label>\r\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n            <option value='subscriber'>Subscriber</option>\r\n            <option value='editor'>Editor</option>\r\n            <option value='maintainer'>Maintainer</option>\r\n            <option value='author'>Author</option>\r\n            <option value='admin'>Admin</option>\r\n          </Input>\r\n        </div>\r\n        <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\r\n          <Label className='form-label' for='select-plan'>\r\n            Select Plan\r\n          </Label>\r\n          <Input type='select' id='select-plan' name='select-plan'>\r\n            <option value='basic'>Basic</option>\r\n            <option value='enterprise'>Enterprise</option>\r\n            <option value='company'>Company</option>\r\n            <option value='team'>Team</option>\r\n          </Input>\r\n        </div>\r\n        <Button type='submit' className='me-1' color='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getUser, deleteUser } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return <Avatar color={color || 'primary'} className='me-1' content={row.fullName || 'John Doe'} initials />\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'User',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'fullName',\r\n    selector: row => row.fullName,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bolder'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Role',\r\n    sortable: true,\r\n    minWidth: '172px',\r\n    sortField: 'role',\r\n    selector: row => row.role,\r\n    cell: row => renderRole(row)\r\n  },\r\n  {\r\n    name: 'Plan',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'currentPlan',\r\n    selector: row => row.currentPlan,\r\n    cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    name: 'Billing',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: row => row.billing,\r\n    cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              \r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                // store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useState} from 'react'\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\n// import { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy } from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({ store, toggleSidebar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = ','\r\n    const lineDelimiter = '\\n'\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = ''\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement('a')\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = 'export.csv'\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv))\r\n    link.setAttribute('download', filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\r\n      <Row>\r\n        <Col xl='6' className='d-flex align-items-center p-0'>\r\n          <div className='d-flex align-items-center w-100'>\r\n            <label htmlFor='rows-per-page'>Show</label>\r\n            <Input\r\n              className='mx-50'\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: '5rem' }}\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </Input>\r\n            <label htmlFor='rows-per-page'>Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='6'\r\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\r\n        >\r\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n            <label className='mb-0' htmlFor='search-invoice'>\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ms-50 w-100'\r\n              type='text'\r\n              value={searchTerm}\r\n              onChange={e => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className='d-flex align-items-center table-header-actions'>\r\n            <UncontrolledDropdown className='me-1'>\r\n              <DropdownToggle color='secondary' caret outline>\r\n                <Share className='font-small-4 me-50' />\r\n                <span className='align-middle'>Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className='w-100'>\r\n                  <Printer className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100' onClick={() => downloadCSV(store.data)}>\r\n                  <FileText className='font-small-4 me-50' />\r\n                  <span className='align-middle'>CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Grid className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <File className='font-small-4 me-50' />\r\n                  <span className='align-middle'>PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Copy className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n              Add New User\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.users)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Get data on mount\r\n  // useEffect(() => {\r\n  //   dispatch(getAllData())\r\n  //   dispatch(\r\n  //     getData({\r\n  //       sort,\r\n  //       sortColumn,\r\n  //       q: searchTerm,\r\n  //       page: currentPage,\r\n  //       perPage: rowsPerPage,\r\n  //       role: currentRole.value,\r\n  //       status: currentStatus.value,\r\n  //       currentPlan: currentPlan.value\r\n  //     })\r\n  //   )\r\n  // }, [dispatch, store.data.length, sort, sortColumn, currentPage])\r\n\r\n  // ** User filter options\r\n  const roleOptions = [\r\n    { value: '', label: 'Select Role' },\r\n    { value: 'admin', label: 'Admin' },\r\n    { value: 'author', label: 'Author' },\r\n    { value: 'editor', label: 'Editor' },\r\n    { value: 'maintainer', label: 'Maintainer' },\r\n    { value: 'subscriber', label: 'Subscriber' }\r\n  ]\r\n\r\n  const planOptions = [\r\n    { value: '', label: 'Select Plan' },\r\n    { value: 'basic', label: 'Basic' },\r\n    { value: 'company', label: 'Company' },\r\n    { value: 'enterprise', label: 'Enterprise' },\r\n    { value: 'team', label: 'Team' }\r\n  ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'pending', label: 'Pending', number: 1 },\r\n    { value: 'active', label: 'Active', number: 2 },\r\n    { value: 'inactive', label: 'Inactive', number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md='4'>\r\n              <Label for='role-select'>Role</Label>\r\n              <Select\r\n                isClearable={false}\r\n                value={currentRole}\r\n                options={roleOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                onChange={data => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className='my-md-0 my-1' md='4'>\r\n              <Label for='plan-select'>Plan</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={planOptions}\r\n                value={currentPlan}\r\n                onChange={data => {\r\n                  setCurrentPlan(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: data.value,\r\n                      status: currentStatus.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md='4'>\r\n              <Label for='status-select'>Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={data => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UsersList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n      <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Inactive Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}